name: CI

# When someone comment "/deploy" on anyone PR,
# this workflow will be triggered and run.
on:
  issue_comment:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  CKB_CLI_VERSION: v0.40.0
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    
jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/deploy"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:   
    runs-on: [self-hosted, linux, X64]
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    strategy:
      matrix:
        allow_failures:
           - rust: stable
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true  
    - name: Test
      run: |
        make test
        rm -rf $HOME/.cargo/registry
    - name: Linters
      run: |
         cargo fmt --version || travis_retry rustup component add rustfmt
         cargo clippy --version || travis_retry rustup component add clippy
         make fmt
         make clippy
         git diff --exit-code Cargo.lock
    - name: Quick Check
      run: |
        make check-cargotoml
        make check-whitespaces
        make check-dirty-rpc-doc
        make check-dirty-hashes-toml
        devtools/ci/check-cyclic-dependencies.py 
    - name: Security Audit & Licenses
      run: |
        cargo deny --version || travis_retry cargo install cargo-deny --locked
        make security-audit
        make check-crates
        make check-licenses
    - name: WASM build
      run: |
        export PATH=/usr/lib/llvm-8/bin:$PATH
        rustup target add wasm32-unknown-unknown
        make wasm-build-test
    - name: Test benchmarks on Linux
      run: make bench-test
    - name: Integration on Linux
      run: make CKB_TEST_ARGS="-c 1 --no-report" integration
    - name: Code Coverage
      env: 
        CACHE_NAME: tarpaulin
      run: |
        cargo tarpaulin --version || travis_retry cargo install cargo-tarpaulin --locked
        - if make cov; then bash <(curl -s https://codecov.io/bash); fi
    - name: Latest Linters 
      run: |
        rustup component add rustfmt --toolchain stable-x86_64-unknown-linux-gnu
        rustup component add clippy --toolchain stable-x86_64-unknown-linux-gnu
        mv rust-toolchain rust-toolchain.bak
        echo "stable" > rust-toolchain
        make fmt
        make clippy
        mv rust-toolchain.bak rust-toolchain
    - name: Cyclic dev-dependencies
      run: |
        devtools/ci/check-cyclic-dependencies.py --dev
    - name: PR Integration 
      run: make CKB_TEST_SEC_COEFFICIENT=5 CKB_TEST_ARGS="-c 4 --no-report" integration


 


