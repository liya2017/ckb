name: build caches

on:
  workflow_dispatch:
env:
  LOGBAK_USER: ${{secrets.LOGBAK_USER}}  #LOCBAK_* for upload logs to server when test failed, for windows
  LOGBAK_PASSWORD: ${{secrets.LOGBAK_PASSWORD}}
  LOGBAK_SERVER: ${{secrets.LOGBAK_SERVER}}
  RUSTFLAGS: "-D warnings"
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - if: ${{ runner.os == 'Windows' }}
      id: cache-key
      shell: bash
      run: echo "::set-output name=yyyymm::$(/bin/date -u '+%Y%m')"
    - if: ${{ runner.os == 'Windows' }}
      uses: actions/cache@v2
      id: restore-scoop
      with:
        path: ~/scoop
        key: ${{ runner.os }}-scoop-${{ steps.cache-key.outputs.yyyymm }}
    - if: ${{ runner.os == 'Windows' && steps.restore-scoop.outputs.cache-hit != 'true' }}
      run: iex (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
    - if: ${{ runner.os == 'Windows' }}
      run: |
        echo "$env:USERPROFILE\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{ github.workspace }}\devtools\windows" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    # - if: ${{ runner.os == 'Windows' }}
    #   run: |
    #     scoop install git
    #     scoop bucket add extras
    #     scoop install llvm yasm
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: 1.51.0
    - uses: actions/cache@v2
      with:
        path: target/debug
        key: ${{ runner.os }}-target-debug-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
             ${{ runner.os }}-target-debug-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('Cargo.lock') }}
             ${{ runner.os }}-target-debug-${{ hashFiles('rust-toolchain') }}-
             ${{ runner.os }}-target-debug
             ${{ runner.os }}-
    - name: build
      run: |
        cargo build