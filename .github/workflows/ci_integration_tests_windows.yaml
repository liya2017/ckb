name: ci_integration_tests_windows
concurrency:
  group: ci_integration_tests_windows-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - master
      - develop
      - trying
      - staging
      - 'rc/*'
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUST_LOG: info,ckb_test=debug,ckb_sync=debug,ckb_relay=debug,ckb_network=debug
  CKB_TEST_SEC_COEFFICIENT: 5
  CKB_TEST_ARGS: -c 4 --no-report --no-fail-fast
jobs:
  prologue:
    name: prologue
    runs-on: ubuntu-20.04
    outputs:
      os_skip: ${{ steps.prologue.outputs.os_skip }}
      job_skip: ${{ steps.prologue.outputs.job_skip }}
      windows_runner_label: ${{ steps.prologue.outputs.windows_runner_label }}
    steps:
    - uses: actions/checkout@v2
    - name: prologue
      id: prologue
      uses: ./.github/actions/ci_prologue
      with:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        COMMIT_MESSAGE: "${{github.event.head_commit.message}}"
        PR_COMMONS_BODY: "${{ github.event.pull_request.body }}"
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        LABELS: "${{ toJson(github.event.pull_request.labels.*.name) }}"
        GITHUB_REPOSITORY: ${{ github.repositoty }}
        GITHUB_WORKFLOW: ${{ github.workflow }}
  ci_integration_tests_windows:
    name: ci_integration_tests_windows
    needs: prologue
    runs-on: ${{ needs.prologue.outputs.windows_runner_label }}
    timeout-minutes: 70
    steps:
    - uses: actions/checkout@v2
    - name: install required tools
      if: ${{ needs.prologue.outputs.windows_runner_label == 'windows-2019' }}
      run: |
        iex (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        echo "$env:USERPROFILE\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{ github.workspace }}\devtools\windows" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        scoop install git
        scoop bucket add extras
        scoop install llvm yasm
    - run: |
        if [[ ${{ needs.prologue.outputs.os_skip }} == run ]] && [[ ${{ needs.prologue.outputs.job_skip }} == run ]];then
            devtools/ci/ci_main.sh
        else
          echo "skip job"
          exit 0
        fi
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: Integration Logs (${{ runner.os }}, ${{ matrix.os }})
        path: ${{ github.workspace }}/integration.log
    env:
      RUNNER_LABEL: ${{ needs.prologue.outputs.windows_runner_label }}
